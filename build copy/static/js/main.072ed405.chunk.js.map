{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filtteri.js","services/Persons.js","components/Ilmoitus.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","PersonForm","props","className","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filtteri","searchValue","setSearchValue","event","target","baseUrl","axios","get","then","response","data","id","delete","newObject","post","put","Ilmoitus","message","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","useEffect","personService","initialPersons","catch","error","console","log","onSubmit","preventDefault","bool","forEach","item","returnedPerson","concat","setTimeout","alert","window","confirm","changedPerson","map","filter","toLowerCase","includes","find","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.072ed405.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n    return (\r\n    <div>\r\n        {person.name} {person.number}\r\n        <button onClick={deletePerson} >Delete</button>\r\n    </div>\r\n    )\r\n  }\r\n \r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"kaavake\">\r\n          Nimi: <input value={props.newName} onChange={props.handleNameChange}/>\r\n          Numero: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type='submit'>Lis채채</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filtteri = ({searchValue, setSearchValue}) => {\r\n\r\nreturn (\r\n    <div className=\"kaavake\">\r\n        Filtteri: <input value={searchValue} \r\n        onChange={event => {setSearchValue(event.target.value)}} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filtteri","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        name: 'tulppu',\r\n        number: '235234'\r\n    }\r\n    // return request.then(response => response.data.concat(nonExisting))\r\n    return request.then(response => response.data) \r\n}\r\n\r\nconst deleteId = (id) => {\r\n    const request = axios.delete(baseUrl + `/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, deleteId, create, update }","import React from 'react'\r\n\r\nconst Ilmoitus = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifikaatio\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Ilmoitus","import React, { useEffect, useState } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filtteri from './components/Filtteri'\nimport personService from './services/Persons'\nimport Ilmoitus from './components/Ilmoitus'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchValue, setSearchValue ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n    .catch(error => {\n      console.log('fail')\n    })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    let bool = true\n    let id = 0\n    persons.forEach(function(item) {\n      if (item.name === newName){\n        bool = false\n        id = item.id\n      }\n    })\n    if (!bool) {\n      alert({newName} + ' is already in phonebook')\n      if (window.confirm(`${newName} is already added to phonebook, \n      replace the old number with a new one?`)) {\n        const changedPerson = {\n          name: newName,\n          number: newNumber\n        }\n        personService\n        .update(id, changedPerson).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))          \n        })\n        .catch(error => {\n          setMessage(`The person ${changedPerson.name} is not in phonebook`)\n        })\n        setMessage(`Changed ${newName}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 2000)\n        \n        setNewName('')\n        setNewNumber('')\n      }} \n     else {\n      const newPersonObject = {\n      name: newName,\n      number: newNumber\n    }\n      personService\n      .create(newPersonObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n      })\n      setMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 2000)\n      setNewName('')\n      setNewNumber('')      \n    }\n    console.log(persons)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(n => n.id === id)\n    if (window.confirm(\"Do you really want to delete?\"))\n    {\n      setMessage(`Deleted ${person.name}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 2000)\n\n      personService\n    .deleteId(id)\n    .then(personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      }))\n    .catch(error => {\n      setMessage(`The person ${person.name} was already deleted from server`)\n      setPersons(persons.filter(n => n.id !== id))\n    })\n  }}\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Ilmoitus message={message} />\n      <Filtteri searchValue={searchValue} setSearchValue={setSearchValue}/>\n      <form onSubmit={addName}>\n        <h2>Lis채채 uusi</h2>\n        <PersonForm newName={newName} \n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange} />\n      </form>\n      <h2>Numerot</h2>\n      <div>\n      {persons.filter((value) => {\n        if (searchValue === ''){\n          return value\n        } else if (value.name.toLowerCase().includes(searchValue.toLowerCase())) {\n          return value\n        }}).map(value =>\n           <Person key={value.name}\n            person={value}\n            deletePerson={() => deletePerson(value.id)}  />\n          )} \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n \n \nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}